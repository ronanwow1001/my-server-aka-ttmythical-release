All of these instructions are for ubuntu (14.10).  I use the oracle virtual box stuff and run a virtual linux box at home for testing/development.  This allows me to match production.

here is my standard set of packages

sudo apt-get install python-dev libpng-dev zlib1g-dev libssl-dev libx11-dev libgl1-mesa-dev libxrandr-dev libxxf86dga-dev libxcursor-dev bison flex libfreetype6-dev libvorbis-dev libjpeg-dev libeigen3-dev libopenal-dev libode-dev libbullet-dev nvidia-cg-toolkit libboost1.55-all-dev python-pip   python-pmw  libyaml-cpp-dev cmake python-mysqldb python-mysql.connector php5-dev php-pear mongodb

then,

   sudo pip install passlib py-bcrypt semidbm PyMongo

then,

   sudo pecl install mongo

next panda:

  cd repos     (wherever your stuff lives)
  git clone https://github.com/astron/panda3d
  git checkout caa7cf67c

  cd panda3d
  python2.7 makepanda/makepanda.py --everything --installer --no-egl --no-gles --no-gles2

  sudo dpkg  -i  panda3d1.9_1.9.0_amd64.deb

The exact flags used on TTF for building panda3d was:

  python2.7 makepanda/makepanda.py --everything --no-touchinput --no-eigen  --installer

next astron:

  cd ..
  git clone https://github.com/astron/astron
  cd astron

If you want to use the version of mongo we are currently using on TTF, you 
need to go to a specific git revisiton.  (We have not tested with newer versions
yet.  If you find a newer configuration that works for you, please update 
this document.)

  git checkout a8949abe

for non mongo, I do

  git checkout 3a15606a


Then retrieve the mongo-cxx-driver-v2.4 drivers, place them some handy, 
and put a symbol link to them in the Astron/src directory.  You can find them
at https://www.mongodb.org/dl/linux/x86_64.   These are all old drivers so 
please feel free to experiment with newer ones and then update this document.

  wget http://downloads.mongodb.org/linux/mongodb-linux-x86_64-v2.4-latest.tgz
  tar zxf mongodb-linux-x86_64-v2.4-latest.tgz

  cd src
  ln -s /home/enigmeow/mongo-cxx-driver-v2.4/src/mongo
  cd ..

next we build it

  cmake -DCMAKE_BUILD_TYPE=Release . && make
  cp astrond ../src/astron

next, the database

  apt-get install mysql-server

pick some useful and random password for root

  apt-get install apache2

then install phpmyadmin.. This has the effect of pulling in all the php dependencies required for mysql

  apt-get install phpmyadmin

Make sure to tell this to use apache..

Now, we can go into mysql

 % mysql -u root -p       (enter the root password)
 mysql> CREATE DATABASE toontown
 mysql> GRANT ALL PRIVILEGES ON toontown.* TO 'toontown'@'localhost' IDENTIFIED BY 'some_pass' WITH GRANT OPTION;
 quit
 % mysql -u toontown -p toontown < schema.sql

now we need to make ourselves our first account.. I created a cmd.php to help.  You MUST supply all the arguments.  If somebody wants to improve this.. PLEASE DO!

  %  php cmd.php u=toontown p=some_pass db=toontown username=test1 password=test email=bahh@gmail.com level=700
  %  php cmd.php u=toontown p=some_pass db=toontown username=test2 password=test email=bahh@gmail.com level=100
  % mysql -u toontown -p toontown
  Enter password:
  mysql> select * from Accounts;

edit   ../config/release/dev.prc

  @@ -7,10 +7,13 @@ model-path ../resources
   # Server:
   server-version fellowship-dev
   min-access-level 600
  -accountdb-type developer
   shard-low-pop 50
   shard-mid-pop 100
  
  +accountdb-type mysqldb
  +mysql-login toontown
  +mysql-password some_pass

and bring up toontown!
